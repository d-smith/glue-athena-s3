AWSTemplateFormatVersion: '2010-09-09'
Description: Sample s3 crawler


Resources:

  GlueRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "glue.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        -
          PolicyName: "glueftw"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
            - Effect: Allow
              Action:
              - glue:*
              - s3:GetBucketLocation
              - s3:ListBucket
              - s3:ListAllMyBuckets
              - s3:GetBucketAcl
              - ec2:DescribeVpcEndpoints
              - ec2:DescribeRouteTables
              - ec2:CreateNetworkInterface
              - ec2:DeleteNetworkInterface
              - ec2:DescribeNetworkInterfaces
              - ec2:DescribeSecurityGroups
              - ec2:DescribeSubnets
              - ec2:DescribeVpcAttribute
              - iam:ListRolePolicies
              - iam:GetRole
              - iam:GetRolePolicy
              - cloudwatch:PutMetricData
              Resource:
              - "*"
            - Effect: Allow
              Action:
              - s3:CreateBucket
              Resource:
              - arn:aws:s3:::aws-glue-*
            - Effect: Allow
              Action:
              - s3:GetObject
              - s3:PutObject
              - s3:DeleteObject
              Resource:
              - arn:aws:s3:::aws-glue-*/*
              - arn:aws:s3:::*/*aws-glue-*/*
              - arn:aws:s3:::97068*/*
            - Effect: Allow
              Action:
              - s3:GetObject
              Resource:
              - arn:aws:s3:::crawler-public*
              - arn:aws:s3:::aws-glue-*
            - Effect: Allow
              Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              Resource:
              - arn:aws:logs:*:*:/aws-glue/*
            - Effect: Allow
              Action:
              - ec2:CreateTags
              - ec2:DeleteTags
              Condition:
                ForAllValues:StringEquals:
                  aws:TagKeys:
                  - aws-glue-service-resource
              Resource:
              - arn:aws:ec2:*:*:network-interface/*
              - arn:aws:ec2:*:*:security-group/*
              - arn:aws:ec2:*:*:instance/*

 
  MyDatabase:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: "gluedeebee"
        Description: "TestDatabaseDescription"
        LocationUri: "TestLocationUri"
        Parameters:
          key1 : "value1"
          key2 : "value2"
 
  # MyClassifier:
  #   Type: AWS::Glue::Classifier
  #   Properties:
  #     GrokClassifier:
  #       Name: "CrawlerClassifier"
  #       Classification: "wikiData"
  #       GrokPattern: "%{NOTSPACE:language} %{NOTSPACE:page_title} %{NUMBER:hits:long} %{NUMBER:retrieved_size:long}"
 
  MyClassifier:
    Type: AWS::Glue::Classifier
    Properties:
      JsonClassifier:
        Name: JasonTheCLassifier
        JsonPath: '/'

  MyS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: "97068crawlertesttarget"
      AccessControl: "BucketOwnerFullControl"
 
  MyCrawler2:
    Type: AWS::Glue::Crawler
    Properties:
      Name: "testcrawler1"
      Role: !GetAtt GlueRole.Arn
      DatabaseName: !Ref MyDatabase
      Classifiers:
        - !Ref MyClassifier
      Targets:
        S3Targets:
          - Path: !Ref MyS3Bucket
      SchemaChangePolicy:
        UpdateBehavior: "UPDATE_IN_DATABASE"
        DeleteBehavior: "LOG"
      Schedule:
        ScheduleExpression: "cron(0/10 * ? * MON-FRI *)"